{
    "swagger": "2.0",
    "info": {
        "version": "3.0.0",
        "title": "API CRU D'OBJETS",
        "description": "Une API qui permet d'ajouter et de supprimer des personnages de WOW"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "tags": [
        {
            "name": "TP noté nackend Node JS",
            "description": "Potentiellement la meilleure API du monde"
        }
    ],
    "schemes": ["http"],
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Autorization",
            "in": "header",
            "description": "Entrez le token avec le préfixe 'Bearer'"
        }
    },
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "paths": {
        "/api/auth/signup": {
            "post": {
                "tags": ["User"],
                "summary": "Enregistrer un utilisateur",
                "parameters": [
                    {
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "description": "Adresse e-mail de l'utilisateur : `req.body.email`",
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "description": "Mot de passe de l'utilisateur : `req.body.password`",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Utilisateur enregistré",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Erreur retournée par l'API"
                    }
                },
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": ["User"],
                "summary": "Authentifier un utilisateur",
                "parameters": [
                    {
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "description": "Adresse e-mail de l'utilisateur : - `req.body.email`",
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "description": "Mot de passe de l'utilisateur : `req.body.password`",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Utilisateur authentifié",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Erreur retournée par l'API"
                    }
                },
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/perso/createPerso": {
            "post": {
                "tags": ["Perso"],
                "summary": "Créer un perso de wow",
                "parameters": [
                    {
                        "name": "pseudo",
                        "in": "body",
                        "required": false,
                        "description": "Pseudo du personnage : `req.body.pseudo`",
                        "type": "string"
                    },
                    {
                        "name": "class",
                        "in": "body",
                        "required": false,
                        "description": "Classe du personnage : `req.body.class`",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Personnage créé",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Erreur retournée par l'API"
                    },
                    "401": {
                        "description": "Paire pseudo et classe déjà existante"
                    }
                },
                "produces": [
                    "application/json"
                ]
            }
        },
        "/api/perso/getPersoWithNameAndClass/{class}/{name}": {
            "get": {
                "tags": ["Character"],
                "summary": "Lister les informations d'un personnage",
                "parameters": [
                    {
                        "name": "pseudo",
                        "in": "path",
                        "required": true,
                        "description": "Pseudo du personnage : `req.params.pseudo`",
                        "type": "string"
                    },
                    {
                        "name": "class",
                        "in": "path",
                        "required": true,
                        "description": "Classe du personnage : `req.params.class`",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retourne un Character",
                        "schema": {
                            "$ref": "#/definitions/Perso"
                        }
                    },
                    "400": {
                        "description": "Erreur retournée par l'API"
                    }
                }
            }
        },
        "/api/perso/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "Identifiant du personnage : `req.params.id`",
                    "type": "string"
                }
            ],
            "get": {
                "tags": ["Perso"],
                "summary": "Lister les informations d'un personnage",
                "responses": {
                    "200": {
                        "description": "Retourne un Perso",
                        "schema": {
                            "$ref": "#/definitions/Perso"
                        }
                    },
                    "400": {
                        "description": "Erreur retournée par l'API"
                    }
                }
            },
            "put": {
                "tags": ["Perso"],
                "summary": "Modifier un personnage",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "pseudo",
                        "in": "body",
                        "description": "Pseudo du personnage : `req.body.pseudo`",
                        "type": "string"
                    },
                    {
                        "name": "class",
                        "in": "body",
                        "description": "Classe du personnage : `req.body.class`",
                        "type": "string"
                    },
                    {
                        "name": "level",
                        "in": "body",
                        "description": "Niveau du personnage : `req.body.level`",
                        "type": "number"
                    },
                    {
                        "name": "userId",
                        "in": "body",
                        "description": "Identifiant de l'utilisateur du personnage : `req.body.userId`",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Personnage modifié",
                        "schema": {
                            "$ref": "#/definitions/Perso"
                        }
                    },
                    "400": {
                        "description": "Personnage inexistant"
                    },
                    "401": {
                        "description": "Ce n'est pas votre perso !"
                    }
                },
                "produces": [
                    "application/json"
                ]
            },
            "delete": {
                "tags": ["Perso"],
                "summary": "Supprimer un personnage",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Personnage supprimé",
                        "schema": {
                            "$ref": "#/definitions/Perso"
                        }
                    },
                    "400": {
                        "description": "Personnage inexistant"
                    },
                    "401": {
                        "description": "Ce n'est pas votre Perso !"
                    }
                },
                "produces": [
                    "application/json"
                ]
            }
        }
    },
    "definitions": {
        "User": {
            "required": ["email", "password"],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "Perso": {
            "required": ["pseudo", "class", "level", "userId"],
            "properties": {
                "name": {
                    "type": "string"
                },
                "class": {
                    "type": "string"
                },
                "level": {
                    "type": "number"
                },
                "userId": {
                    "type": "string"
                }
            }
        }
    }
}